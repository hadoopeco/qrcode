<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd"
       default-lazy-init="true">

    <!-- =================================================================== -->
    <!-- AOP: Configuration and Aspects                                      -->
    <!-- =================================================================== -->
    <aop:config>
        <aop:advisor id="userManagerTx" advice-ref="userManagerTxAdvice" pointcut="execution(* *..service.UserManager.*(..))" order="0"/>        
        <aop:advisor id="userManagerSecurity" advice-ref="userSecurityAdvice" pointcut="execution(* *..service.UserManager.saveUser(..))" order="1"/>
        <aop:advisor id="managerTx" advice-ref="txAdvice" pointcut="execution(* *..service.*Manager.*(..))" order="2"/>
    </aop:config>
    
    <!-- Enable @Transactional support -->
    <tx:annotation-driven/>
    
    <!-- Enable @AspectJ support -->
    <aop:aspectj-autoproxy/>

    <!-- Activates scanning of @Autowired -->
    <context:annotation-config/>
    
    <!-- Activates scanning of @Service -->
    <context:component-scan base-package="com.pupuly.service"/>
    
    <tx:advice id="txAdvice">
        <tx:attributes>
            <!-- Read-only commented out to make things easier for end-users -->
            <!-- http://issues.appfuse.org/browse/APF-556 -->
            <!--tx:method name="get*" read-only="true"/-->
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <tx:advice id="userManagerTxAdvice">
        <tx:attributes>
            <tx:method name="save*" rollback-for="UserExistsException"/>
        </tx:attributes>
    </tx:advice>
    
    <bean id="userSecurityAdvice" class="com.pupuly.service.UserSecurityAdvice"/>
    
    <!-- =================================================================== -->
    <!-- Mail: Sender and Velocity configuration                             -->
    <!-- =================================================================== -->
    <bean id="mailEngine" class="com.pupuly.service.MailEngine">
        <property name="mailSender" ref="mailSender"/>
        <property name="velocityEngine" ref="velocityEngine"/>
        <property name="from" value="${mail.default.from}"/>
    </bean>

    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${mail.host}"/>
        <property name="defaultEncoding" value="UTF-8"/> 
        <!-- Uncomment if you need to authenticate with your SMTP Server -->
        <!--property name="username" value="${mail.username}"/>
        <property name="password" value="${mail.password}"/>
        <property name="javaMailProperties">
            <value>
                mail.smtp.auth=true
            </value>
        </property-->
    </bean>

    <!-- Configure Velocity for sending e-mail -->
    <bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
        <property name="velocityProperties">
            <props>
                <prop key="resource.loader">class</prop>
                <prop key="class.resource.loader.class">
                    org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
                </prop>
                <prop key="velocimacro.library"></prop>
            </props>
        </property>
    </bean>

    <bean id="mailMessage" class="org.springframework.mail.SimpleMailMessage" scope="prototype">
        <property name="from" value="${mail.default.from}"/>
    </bean>





    <!-- =================================================================== -->
    <!-- Security class from Spring Security - used to configure Password    -->
    <!-- Encryption in UserManagerImpl. Can override in security.xml.        -->
    <!-- =================================================================== -->
    <bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder"/>

    <!-- ============================================================================ -->
    <!-- generate the barcode service-->
    <bean id="multiFormatWriter" class="com.google.zxing.MultiFormatWriter"/>

    <bean id="client" class="com.taobao.api.DefaultTaobaoClient">
        <constructor-arg index="0" type="java.lang.String">
            <value>http://gw.api.tbsandbox.com/router/rest</value>
        </constructor-arg>
        <constructor-arg index="1" type="java.lang.String">
            <value>12007234</value>
        </constructor-arg>
        <constructor-arg index="2" type="java.lang.String">
            <value>sandbox37f9acf1bd98c87ca326eacd8</value>
        </constructor-arg>
    </bean>


    <bean id="qrImgService" class="com.pupuly.service.impl.QrImgServiceImpl">
        <property name="client" ref="client"/>
        <property name="generator" ref="QRcodeGenerator"/>
        <property name="multiFormatWriter" ref="multiFormatWriter"/>
        <property name="docService" ref="docService"/>
        <property name="prefixUrl" value="http://www.taobao.com?code="/>
    </bean>


    <!--<bean id="jcrTemplate" class="org.springmodules.jcr.JcrTemplate">-->
    <!--<property name="sessionFactory" ref="jcrSessionFactory"/>-->
    <!--<property name="allowCreate" value="true"/>-->
    <!--</bean>-->
    <bean id="docService" class="com.pupuly.service.impl.DocServiceImpl">
        <property name="jcrTemplate" ref="jcrTemplate"/>
    </bean>



    <!--<bean id="docrepository" class="org.springmodules.jcr.jackrabbit.RepositoryFactoryBean">-->
    <!--<property name="configuration" value="classpath:repository.xml"/>-->
    <!--<property name="homeDir" value="./tmp/repo"/>-->
    <!--</bean>-->
<!--&lt;!&ndash; create the password to return it as a char[] &ndash;&gt;-->
    <!--<bean id="jcrpassword" class="java.lang.String">-->
        <!--<constructor-arg index="0" value="password"/>-->
    <!--</bean>-->

    <bean id="QRcodeGenerator" class="com.pupuly.service.impl.QRcodeGeneratorImpl"/>


    <bean id="jcrRepository" class="org.springmodules.jcr.jackrabbit.RepositoryFactoryBean">
  <!-- normal factory beans params -->
        <property name="configuration" value="classpath:repository.xml"/>
        <property name="homeDir" value="file:E:/work/qrcode/repository"/>
    </bean>

    <bean id="jcrSessionFactory" class="org.springmodules.jcr.JcrSessionFactory">
         <property name="repository" ref="jcrRepository"/>
         <property name="credentials">
             <bean class="javax.jcr.SimpleCredentials">
                 <constructor-arg index="0" value="bogus"/>
                 <!-- create the credentials using a bean factory -->
                 <constructor-arg index="1" value="password"/>
             </bean>
         </property>
    </bean>

    <bean id="jcrTemplate" class="org.springmodules.jcr.JcrTemplate">
        <property name="sessionFactory" ref="jcrSessionFactory"/>
        <property name="allowCreate" value="true"/>
    </bean>
</beans>
